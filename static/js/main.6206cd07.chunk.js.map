{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","components/Home.js","App.js","components/Login.js","components/Logout.js","components/Comments.js","components/PostDetails.js","components/PostForm.js","components/CommentForm.js","Routes.js","index.js"],"names":["Header","props","className","to","authState","Footer","Layout","children","Home","useState","posts","setPosts","refresh","setRefresh","handleSubmit","useHistory","e","post","preventDefault","requestOptions","method","mode","headers","Authorization","localStorage","getItem","body","JSON","stringify","title","published","fetch","id","then","results","useEffect","a","response","json","data","item","listPosts","map","toString","onSubmit","type","value","fetchPosts","App","Login","username","setUsername","password","setPassword","history","errorMessage","setErrorMessage","adminSite","undefined","token","window","setItem","authRefresh","push","message","htmlFor","name","autoComplete","onChange","target","required","Logout","removeItem","DateTime","require","Comments","comments","setComments","reloadComments","setReloadComments","handleDelete","commentId","postid","fetchComments","element","comment","_id","author","fromISO","timestamp","toLocaleString","DATETIME_MED","onClick","PostDetails","postDetails","setPostDetails","useParams","fetchPostDetails","useLocation","pathname","PostForm","postTitle","setPostTitle","postBody","setPostBody","redirect","setRedirect","newUrl","setNewUrl","from","userId","url","catch","error","console","log","CommentForm","commentBody","setCommentBody","fetchCommentDetails","Routes","auth","setAuth","setUserId","authChecker","forceRefresh","exact","path","render","state","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6206cd07.chunk.js","sourcesContent":["import './Header.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <ul className=\"headerNav\">\n        <li>\n          <NavLink to=\"/\">Home</NavLink>\n        </li>\n        {!props.authState && (\n          <li>\n            <NavLink to=\"/login\">Login</NavLink>\n          </li>\n        )}\n        {props.authState && (\n          <li>\n            <NavLink to=\"/logout\">Log out</NavLink>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","import './Footer.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <ul className=\"footerNav\">\n        <li>Privacy</li>\n        <li>About</li>\n        <li>Contact us</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Header from './Header';\nimport Footer from './Footer';\nimport './Layout.css';\n\nconst Layout = (props) => {\n  return (\n    <div className=\"App\">\n      <Header authState={props.authState} />\n      {props.children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport './Home.css';\nimport Layout from './Layout';\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e, post) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        title: post.title,\n        body: post.body,\n        published: !post.published,\n      }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + post.id,\n      requestOptions\n    ).then((results) => {\n      setRefresh(!refresh);\n    });\n  };\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts',\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.posts;\n      const listPosts = item.map((post) => {\n        return (\n          <li key={post.title} className=\"postDetails\">\n            <Link to={'/posts/' + post.id}>{post.title}</Link>\n            <div>\n              <p>Published: {post.published.toString()}</p>\n              <form onSubmit={(e) => handleSubmit(e, post)}>\n                <input type=\"submit\" id=\"togglePublish\" value=\"Toggle\" />\n              </form>\n            </div>\n          </li>\n        );\n      });\n      setPosts(listPosts);\n    };\n    fetchPosts();\n  }, [refresh]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"mainContentHome\">\n        <div className=\"homeBanner\">\n          <p>Welcome to the blog admin site!</p>\n          <Link to=\"/posts/new\">\n            <button type=\"button\">New Post</button>\n          </Link>\n        </div>\n        <ul className=\"postIndex\">{posts ? posts : ''}</ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport Home from './components/Home';\n\nfunction App(props) {\n  return (\n    <div>\n      <Home authState={props.authState} />\n    </div>\n  );\n}\n\nexport default App;\n","import './Login.css';\nimport Layout from './Layout';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        adminSite: true,\n      }),\n    };\n    fetch('https://serene-waters-04286.herokuapp.com/login', requestOptions)\n      .then((response) => response.json())\n      .then((results) => {\n        if (results.token !== undefined) {\n          window.localStorage.setItem('user', results.token);\n          props.authRefresh(true);\n          history.push('/');\n        } else {\n          setErrorMessage(results.message);\n        }\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"mainContent\">\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <label htmlFor=\"username-field\">Username:</label>\n          <br />\n          <input\n            type=\"text\"\n            id=\"username-field\"\n            name=\"username\"\n            autoComplete=\"on\"\n            value={username ? username : ''}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-field\">Password:</label>\n          <br />\n          <input\n            type=\"password\"\n            id=\"password-field\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password ? password : ''}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <br />\n          <input type=\"submit\" id=\"loginButton\" value=\"Login\" />\n          {errorMessage && <div>{errorMessage}</div>}\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = (props) => {\n  useEffect(() => {\n    props.authRefresh(true);\n    window.localStorage.removeItem('user');\n  }, []);\n\n  return <div>{!props.authState && <Redirect to={'/login'} />}</div>;\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Comments.css';\nconst { DateTime } = require('luxon');\n\nconst Comments = (props) => {\n  const [comments, setComments] = useState([]);\n  const [reloadComments, setReloadComments] = useState(false);\n\n  const handleDelete = (e, commentId) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        props.postid +\n        '/comments/' +\n        commentId,\n      requestOptions\n    ).then(() => {\n      setComments([]);\n      setReloadComments(!reloadComments);\n    });\n  };\n\n  const fetchComments = async () => {\n    const response = await fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        props.postid +\n        '/comments',\n      {\n        mode: 'cors',\n      }\n    );\n    const data = await response.json();\n    for (const comment of data.comments) {\n      let element;\n      element = (\n        <div className=\"commentLayout\" id={comment._id} key={comment._id}>\n          <h4 className=\"commentAuthor\">{comment.author.username}</h4>\n          <p className=\"commentTimestamp\">\n            {DateTime.fromISO(comment.timestamp).toLocaleString(\n              DateTime.DATETIME_MED\n            )}\n          </p>\n          <p className=\"commentBody\">{comment.body}</p>\n          <div className=\"modifyComment\">\n            <Link\n              to={\n                '/posts/' + props.postid + '/comments/' + comment._id + '/edit'\n              }\n            >\n              <button type=\"button\">Edit</button>\n            </Link>\n\n            <button type=\"button\" onClick={(e) => handleDelete(e, comment._id)}>\n              Delete\n            </button>\n          </div>\n\n          <br />\n        </div>\n      );\n      setComments((comments) => [...comments, element]);\n    }\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [reloadComments]);\n  return <div className=\"Comment\">{comments}</div>;\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, useHistory, Link } from 'react-router-dom';\n\nimport './PostDetails.css';\nimport Layout from './Layout';\nimport Comments from './Comments';\n\nconst PostDetails = (props) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const deletePost = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        post: id,\n      }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + id,\n      requestOptions\n    ).then(() => {\n      history.push('/');\n    });\n  };\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.post;\n      setPostDetails(item);\n    };\n    fetchPostDetails();\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"postLayout\">\n        <div className=\"post\">\n          <h2>{postDetails ? postDetails.title : ''}</h2>\n          <br />\n          <Link to={useLocation().pathname + '/edit'}>\n            <button type=\"button\">Edit</button>\n          </Link>\n          <button type=\"button\" onClick={deletePost}>\n            Delete\n          </button>\n          <br />\n          <p> {postDetails ? postDetails.body : ''}</p>\n        </div>\n        <Comments postid={id} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostDetails;\n","import Layout from './Layout';\nimport './PostForm.css';\nimport { useParams, Redirect } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst PostForm = (props) => {\n  const [postTitle, setPostTitle] = useState(null);\n  const [postBody, setPostBody] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [newUrl, setNewUrl] = useState(null);\n  const { id } = useParams();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (id === undefined) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: JSON.stringify({\n          author: props.userId,\n          title: postTitle,\n          body: postBody,\n        }),\n      };\n      fetch('https://serene-waters-04286.herokuapp.com/posts/', requestOptions)\n        .then((response) => response.json())\n        .then((results) => {\n          return setNewUrl(results.url);\n        })\n        .catch((error) => {\n          console.log('The fetch error is: ' + error);\n        });\n    } else {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: JSON.stringify({ title: postTitle, body: postBody }),\n      };\n      fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        requestOptions\n      ).then(() => setRedirect(true));\n    }\n  };\n\n  useEffect(() => {\n    if (id === undefined) {\n    } else {\n      const fetchPostDetails = async () => {\n        const response = await fetch(\n          'https://serene-waters-04286.herokuapp.com/posts/' + id + '/edit',\n          {\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + localStorage.getItem('user'),\n            },\n          }\n        );\n        const data = await response.json();\n        const item = data.post;\n        setPostTitle(item.title);\n        setPostBody(item.body);\n      };\n      fetchPostDetails();\n    }\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      {newUrl !== null && <Redirect to={newUrl} />}\n      {redirect === true && newUrl === null && (\n        <Redirect from=\"/posts/:id/edit\" to={'/posts/' + id} />\n      )}\n      <div className=\"postEditForm\">\n        <form onSubmit={handleSubmit}>\n          <label>Title: </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postTitle ? postTitle : ''}\n            onChange={(e) => setPostTitle(e.target.value)}\n            required\n          />\n          <br />\n          <label>Body: </label>\n          <br />\n          <textarea\n            name=\"body\"\n            value={postBody ? postBody : ''}\n            onChange={(e) => setPostBody(e.target.value)}\n            required\n          />\n          <input type=\"submit\" id=\"submitPostForm\" value=\"Submit\" />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostForm;\n","import Layout from './Layout';\nimport './CommentForm.css';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst CommentForm = (props) => {\n  const [commentBody, setCommentBody] = useState(null);\n  const { id, commentId } = useParams();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({ body: commentBody }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        id +\n        '/comments/' +\n        commentId,\n      requestOptions\n    ).then(() => {\n      history.push('/posts/' + id);\n    });\n  };\n\n  useEffect(() => {\n    const fetchCommentDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' +\n          id +\n          '/comments/' +\n          commentId +\n          '/edit',\n        {\n          mode: 'cors',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('user'),\n          },\n        }\n      );\n      const data = await response.json();\n      const item = data.comment;\n      setCommentBody(item.body);\n    };\n    fetchCommentDetails();\n  }, [id, commentId]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"commentEditForm\">\n        <form onSubmit={handleSubmit}>\n          <label>Body: </label>\n          <br />\n          <textarea\n            name=\"body\"\n            value={commentBody ? commentBody : ''}\n            onChange={(e) => setCommentBody(e.target.value)}\n            required\n          />\n          <input type=\"submit\" id=\"commentSubmit\" value=\"Submit\" />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CommentForm;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport PostDetails from './components/PostDetails';\nimport PostForm from './components/PostForm';\nimport CommentForm from './components/CommentForm';\n\nconst Routes = () => {\n  const [auth, setAuth] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  const authChecker = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    if (localStorage.getItem('user')) {\n      fetch('https://serene-waters-04286.herokuapp.com/auth', requestOptions)\n        .then((response) => {\n          return response.json();\n        })\n        .then((results) => {\n          setAuth(results.response);\n          setUserId(results.userId);\n          setRefresh(false);\n        });\n    } else {\n      setAuth(false);\n      setUserId(null);\n      setRefresh(false);\n    }\n  };\n\n  useEffect(() => {\n    authChecker();\n  }, [refresh]);\n\n  return (\n    <HashRouter forceRefresh>\n      {!auth && !localStorage.getItem('user') && (\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Redirect to={'/login'} />\n          </Switch>\n        </div>\n      )}\n      <Switch>\n        <Route exact path=\"/\" render={() => <App authState={auth} />} />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login authRefresh={(state) => setRefresh(state)} />}\n        />\n        <Route\n          exact\n          path=\"/logout\"\n          render={() => (\n            <Logout\n              authState={auth}\n              authRefresh={(state) => setRefresh(state)}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/posts/new\"\n          render={() => <PostForm authState={auth} userId={userId} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id\"\n          render={() => <PostDetails authState={auth} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id/edit\"\n          render={() => <PostForm authState={auth} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id/comments/:commentId/edit\"\n          render={() => <CommentForm authState={auth} />}\n        />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}