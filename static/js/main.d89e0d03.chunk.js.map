{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","components/Home.js","App.js","components/Login.js","components/Logout.js","components/Comments.js","components/PostDetails.js","components/PostForm.js","components/CommentForm.js","Routes.js","index.js"],"names":["Header","props","className","to","authState","Footer","Layout","children","Home","useState","posts","setPosts","refresh","setRefresh","handleSubmit","e","post","preventDefault","requestOptions","method","mode","headers","Authorization","localStorage","getItem","body","JSON","stringify","title","published","fetch","id","then","results","useEffect","a","response","json","data","item","listPosts","map","href","url","toString","onSubmit","type","value","fetchPosts","action","App","Login","username","setUsername","password","setPassword","history","useHistory","errorMessage","setErrorMessage","adminSite","undefined","token","window","setItem","authRefresh","push","message","htmlFor","name","autoComplete","onChange","target","required","Logout","removeItem","DateTime","require","Comments","comments","setComments","reloadComments","setReloadComments","handleDelete","commentId","postid","fetchComments","element","comment","_id","author","fromISO","timestamp","toLocaleString","DATETIME_MED","PostDetails","postDetails","setPostDetails","useParams","fetchPostDetails","useLocation","pathname","PostForm","postTitle","setPostTitle","postBody","setPostBody","redirect","setRedirect","newUrl","setNewUrl","from","userId","catch","error","console","log","CommentForm","commentBody","setCommentBody","fetchCommentDetails","Routes","auth","setAuth","setUserId","authChecker","forceRefresh","exact","path","render","state","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d89e0d03.chunk.js","sourcesContent":["import './Header.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <ul className=\"headerNav\">\n        <li>\n          <NavLink to=\"/\">Home</NavLink>\n        </li>\n        {!props.authState && (\n          <li>\n            <NavLink to=\"/login\">Login</NavLink>\n          </li>\n        )}\n        {props.authState && (\n          <li>\n            <NavLink to=\"/logout\">Log out</NavLink>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","import './Footer.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <ul className=\"footerNav\">\n        <li>Privacy</li>\n        <li>About</li>\n        <li>Contact us</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Header from './Header';\nimport Footer from './Footer';\nimport './Layout.css';\n\nconst Layout = (props) => {\n  return (\n    <div className=\"App\">\n      <Header authState={props.authState} />\n      {props.children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport Layout from './Layout';\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  const handleSubmit = (e, post) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        title: post.title,\n        body: post.body,\n        published: !post.published,\n      }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + post.id,\n      requestOptions\n    ).then((results) => {\n      setRefresh(!refresh);\n    });\n  };\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts',\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.posts;\n      const listPosts = item.map((post) => {\n        return (\n          <li key={post.title} className=\"postDetails\">\n            <a href={post.url}>{post.title}</a>\n            <div>\n              <p>Published: {post.published.toString()}</p>\n              <form onSubmit={(e) => handleSubmit(e, post)}>\n                <input type=\"submit\" value=\"Toggle\" />\n              </form>\n            </div>\n          </li>\n        );\n      });\n      setPosts(listPosts);\n    };\n    fetchPosts();\n  }, [refresh]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"mainContentHome\">\n        <div className=\"homeBanner\">\n          <p>Welcome to the blog admin site!</p>\n          <form action=\"/posts/new\">\n            <input type=\"submit\" value=\"New Post\" />\n          </form>\n        </div>\n        <ul className=\"postIndex\">{posts ? posts : ''}</ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport Home from './components/Home';\n\nfunction App(props) {\n  return (\n    <div>\n      <Home authState={props.authState} />\n    </div>\n  );\n}\n\nexport default App;\n","import './Login.css';\nimport Layout from './Layout';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        adminSite: true,\n      }),\n    };\n    fetch('https://serene-waters-04286.herokuapp.com/login', requestOptions)\n      .then((response) => response.json())\n      .then((results) => {\n        if (results.token !== undefined) {\n          window.localStorage.setItem('user', results.token);\n          props.authRefresh(true);\n          history.push('/');\n        } else {\n          setErrorMessage(results.message);\n        }\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"mainContent\">\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <label htmlFor=\"username-field\">Username:</label>\n          <br />\n          <input\n            type=\"text\"\n            id=\"username-field\"\n            name=\"username\"\n            autoComplete=\"on\"\n            value={username ? username : ''}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-field\">Password:</label>\n          <br />\n          <input\n            type=\"password\"\n            id=\"password-field\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password ? password : ''}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <br />\n          <input type=\"submit\" value=\"Login\" />\n          {errorMessage && <div>{errorMessage}</div>}\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = (props) => {\n  useEffect(() => {\n    props.authRefresh(true);\n    window.localStorage.removeItem('user');\n  }, []);\n\n  return <div>{!props.authState && <Redirect to={'/login'} />}</div>;\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport './Comments.css';\nconst { DateTime } = require('luxon');\n\nconst Comments = (props) => {\n  const [comments, setComments] = useState([]);\n  const [reloadComments, setReloadComments] = useState(false);\n\n  const handleDelete = (e, commentId) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        props.postid +\n        '/comments/' +\n        commentId,\n      requestOptions\n    ).then(() => {\n      setComments([]);\n      setReloadComments(!reloadComments);\n    });\n  };\n\n  const fetchComments = async () => {\n    const response = await fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        props.postid +\n        '/comments',\n      {\n        mode: 'cors',\n      }\n    );\n    const data = await response.json();\n    for (const comment of data.comments) {\n      let element;\n      element = (\n        <div className=\"commentLayout\" id={comment._id} key={comment._id}>\n          <h4 className=\"commentAuthor\">{comment.author.username}</h4>\n          <p className=\"commentTimestamp\">\n            {DateTime.fromISO(comment.timestamp).toLocaleString(\n              DateTime.DATETIME_MED\n            )}\n          </p>\n          <p className=\"commentBody\">{comment.body}</p>\n          <div className=\"modifyComment\">\n            <form\n              action={\n                '/posts/' + props.postid + '/comments/' + comment._id + '/edit'\n              }\n            >\n              <input type=\"submit\" value=\"Edit\" />\n            </form>\n            <form onSubmit={(e) => handleDelete(e, comment._id)}>\n              <input type=\"submit\" value=\"Delete\" />\n            </form>\n          </div>\n\n          <br />\n        </div>\n      );\n      setComments((comments) => [...comments, element]);\n    }\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [reloadComments]);\n  return <div className=\"Comment\">{comments}</div>;\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\n\nimport './PostDetails.css';\nimport Layout from './Layout';\nimport Comments from './Comments';\n\nconst PostDetails = (props) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const deletePost = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        post: id,\n      }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + id,\n      requestOptions\n    ).then(() => {\n      history.push('/');\n    });\n  };\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.post;\n      setPostDetails(item);\n    };\n    fetchPostDetails();\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"postLayout\">\n        <div className=\"post\">\n          <h2>{postDetails ? postDetails.title : ''}</h2>\n          <br />\n          <form action={useLocation().pathname + '/edit'}>\n            <input type=\"submit\" value=\"Edit\" />\n          </form>\n          <form onSubmit={deletePost}>\n            <input type=\"submit\" value=\"Delete\" />\n          </form>\n          <br />\n          <p> {postDetails ? postDetails.body : ''}</p>\n        </div>\n        <Comments postid={id} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostDetails;\n","import Layout from './Layout';\nimport './PostForm.css';\nimport { useParams, Redirect } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst PostForm = (props) => {\n  const [postTitle, setPostTitle] = useState(null);\n  const [postBody, setPostBody] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [newUrl, setNewUrl] = useState(null);\n  const { id } = useParams();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (id === undefined) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: JSON.stringify({\n          author: props.userId,\n          title: postTitle,\n          body: postBody,\n        }),\n      };\n      fetch('https://serene-waters-04286.herokuapp.com/posts/', requestOptions)\n        .then((response) => response.json())\n        .then((results) => {\n          return setNewUrl(results.url);\n        })\n        .catch((error) => {\n          console.log('The fetch error is: ' + error);\n        });\n    } else {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: JSON.stringify({ title: postTitle, body: postBody }),\n      };\n      fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        requestOptions\n      ).then(() => setRedirect(true));\n    }\n  };\n\n  useEffect(() => {\n    if (id === undefined) {\n    } else {\n      const fetchPostDetails = async () => {\n        const response = await fetch(\n          'https://serene-waters-04286.herokuapp.com/posts/' + id + '/edit',\n          {\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + localStorage.getItem('user'),\n            },\n          }\n        );\n        const data = await response.json();\n        const item = data.post;\n        setPostTitle(item.title);\n        setPostBody(item.body);\n      };\n      fetchPostDetails();\n    }\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      {newUrl !== null && <Redirect to={newUrl} />}\n      {redirect === true && newUrl === null && (\n        <Redirect from=\"/posts/:id/edit\" to={'/posts/' + id} />\n      )}\n      <div className=\"postEditForm\">\n        <form onSubmit={handleSubmit}>\n          <label>Title: </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postTitle ? postTitle : ''}\n            onChange={(e) => setPostTitle(e.target.value)}\n            required\n          />\n          <br />\n          <label>Body: </label>\n          <br />\n          <textarea\n            name=\"body\"\n            value={postBody ? postBody : ''}\n            onChange={(e) => setPostBody(e.target.value)}\n            required\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostForm;\n","import Layout from './Layout';\nimport './CommentForm.css';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst CommentForm = (props) => {\n  const [commentBody, setCommentBody] = useState(null);\n  const { id, commentId } = useParams();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({ body: commentBody }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        id +\n        '/comments/' +\n        commentId,\n      requestOptions\n    ).then(() => {\n      history.push('/posts/' + id);\n    });\n  };\n\n  useEffect(() => {\n    const fetchCommentDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' +\n          id +\n          '/comments/' +\n          commentId +\n          '/edit',\n        {\n          mode: 'cors',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('user'),\n          },\n        }\n      );\n      const data = await response.json();\n      const item = data.comment;\n      setCommentBody(item.body);\n    };\n    fetchCommentDetails();\n  }, [id, commentId]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"commentEditForm\">\n        <form onSubmit={handleSubmit}>\n          <label>Body: </label>\n          <br />\n          <textarea\n            name=\"body\"\n            value={commentBody ? commentBody : ''}\n            onChange={(e) => setCommentBody(e.target.value)}\n            required\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CommentForm;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport PostDetails from './components/PostDetails';\nimport PostForm from './components/PostForm';\nimport CommentForm from './components/CommentForm';\n\nconst Routes = () => {\n  const [auth, setAuth] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  const authChecker = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    if (localStorage.getItem('user')) {\n      fetch('https://serene-waters-04286.herokuapp.com/auth', requestOptions)\n        .then((response) => {\n          return response.json();\n        })\n        .then((results) => {\n          setAuth(results.response);\n          setUserId(results.userId);\n          setRefresh(false);\n        });\n    } else {\n      setAuth(false);\n      setUserId(null);\n      setRefresh(false);\n    }\n  };\n\n  useEffect(() => {\n    authChecker();\n  }, [refresh]);\n\n  return (\n    <BrowserRouter forceRefresh>\n      {!auth && !localStorage.getItem('user') && (\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Redirect to={'/login'} />\n          </Switch>\n        </div>\n      )}\n      <Switch>\n        <Route exact path=\"/\" render={() => <App authState={auth} />} />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login authRefresh={(state) => setRefresh(state)} />}\n        />\n        <Route\n          exact\n          path=\"/logout\"\n          render={() => (\n            <Logout\n              authState={auth}\n              authRefresh={(state) => setRefresh(state)}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/posts/new\"\n          render={() => <PostForm authState={auth} userId={userId} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id\"\n          render={() => <PostDetails authState={auth} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id/edit\"\n          render={() => <PostForm authState={auth} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id/comments/:commentId/edit\"\n          render={() => <CommentForm authState={auth} />}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}