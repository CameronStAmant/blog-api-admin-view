{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","const.js","components/Home.js","App.js","components/Login.js","components/Logout.js","components/Comments.js","components/PostDetails.js","components/PostForm.js","components/CommentForm.js","Routes.js","index.js"],"names":["Header","props","className","to","authState","Footer","Layout","children","baseUrl","Home","useState","posts","setPosts","refresh","setRefresh","handleSubmit","useHistory","e","post","preventDefault","formData","FormData","append","title","body","published","coverPhoto","requestOptions","method","mode","headers","Authorization","localStorage","getItem","fetch","id","then","results","useEffect","a","response","json","data","item","listPosts","map","src","alt","toString","onSubmit","type","value","fetchPosts","App","Login","username","setUsername","password","setPassword","history","errorMessage","setErrorMessage","JSON","stringify","adminSite","undefined","token","window","setItem","authRefresh","push","message","htmlFor","name","autoComplete","onChange","target","required","Logout","removeItem","DateTime","require","Comments","comments","setComments","reloadComments","setReloadComments","handleDelete","commentId","postid","fetchComments","element","comment","_id","author","fromISO","timestamp","toLocaleString","DATETIME_MED","onClick","PostDetails","postDetails","setPostDetails","useParams","fetchPostDetails","useLocation","pathname","PostForm","postTitle","setPostTitle","postCoverPhoto","setPostCoverPhoto","coverPhotoURL","setCoverPhotoURL","postBody","setPostBody","redirect","setRedirect","newUrl","setNewUrl","coverPhotoTernary","files","URL","createObjectURL","console","log","from","userId","url","catch","error","v","rows","CommentForm","commentBody","setCommentBody","fetchCommentDetails","Routes","auth","setAuth","setUserId","authChecker","forceRefresh","exact","path","render","state","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b53db460.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <div className=\"display: grid grid-cols-3 col-span-3 row-start-1 bg-green-100 py-2\">\n      <ul className=\"display: grid col-start-1 col-span-full grid-flow-col place-items-center text-center\">\n        <li className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-5/6 active:bg-green-400 active:border-green-400 shadow-sm\">\n          <NavLink to=\"/\" className=\"display: block\">\n            Home\n          </NavLink>\n        </li>\n        {!props.authState && (\n          <li className=\"sm:col-start-3 lg:col-start-4 bordber-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-5/6 active:bg-green-400 active:border-green-400 shadow-sm\">\n            <NavLink to=\"/login\" className=\"display: block\">\n              Login\n            </NavLink>\n          </li>\n        )}\n        {props.authState && (\n          <li className=\"sm:col-start-4 lg:col-start-5 border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-5/6 active:bg-green-400 active:border-green-400 shadow-sm\">\n            <NavLink to=\"/logout\" className=\"display: block\">\n              Log out\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  return (\n    <ul className=\"display: grid grid-cols-3 text-center py-2 row-start-3 col-span-full\">\n      <li>Privacy</li>\n      <li>About</li>\n      <li>Contact us</li>\n    </ul>\n  );\n};\n\nexport default Footer;\n","import Header from './Header';\nimport Footer from './Footer';\n\nconst Layout = (props) => {\n  return (\n    <div className=\"display: grid grid-cols-3 grid-rows-layout min-h-screen grid-flow-col p-0 m-0 list-none\">\n      <Header authState={props.authState} />\n      {props.children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","const baseUrl =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3000'\n    : 'https://serene-waters-04286.herokuapp.com';\n\nexport default baseUrl;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport Layout from './Layout';\nimport baseUrl from '../const';\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e, post) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('title', post.title);\n    formData.append('body', post.body);\n    formData.append('published', !post.published);\n    formData.append('coverPhoto', post.coverPhoto);\n\n    const requestOptions = {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: formData,\n    };\n    fetch(baseUrl + '/posts/' + post.id, requestOptions).then((results) => {\n      setRefresh(!refresh);\n    });\n  };\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(baseUrl + '/posts', {\n        mode: 'cors',\n      });\n      const data = await response.json();\n      const item = data.posts;\n      const listPosts = item.map((post) => {\n        return (\n          <li\n            key={post.title}\n            className=\"display: grid box-border border-2 shadow-sm rounded-md gap-4 border-green-200 mx-2 auto-rows-min\"\n          >\n            <Link to={'/posts/' + post.id}>\n              <img\n                src={post ? baseUrl + '/uploads/' + post.coverPhoto : ''}\n                alt=\"Post Cover\"\n              />\n              <p className=\"m-14 text-center text-xl font-semibold\">\n                {post.title}\n              </p>\n            </Link>\n            <div className=\"display: grid mb-8\">\n              <p>Published: {post.published.toString()}</p>\n              <form onSubmit={(e) => handleSubmit(e, post)}>\n                <input\n                  className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n                  type=\"submit\"\n                  id=\"togglePublish\"\n                  value=\"Toggle\"\n                />\n              </form>\n            </div>\n          </li>\n        );\n      });\n      setPosts(listPosts);\n    };\n    fetchPosts();\n  }, [refresh]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"display: grid grid-rows-home auto-rows-min row-start-2 col-span-full\">\n        <div className=\"row-start-1 place-self-center min-h-px col-span-full text-2xl font-semibold text-center\">\n          <h2>Welcome to the blog admin site!</h2>\n          <Link to=\"/posts/new\">\n            <button\n              type=\"button\"\n              className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n            >\n              New Post\n            </button>\n          </Link>\n        </div>\n        <ul className=\"display: grid grid-flow-row md:grid-cols-2 row-start-2 lg:grid-cols-3 col-span-full gap-y-4 h-full text-center auto-rows-min\">\n          {posts ? posts : ''}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport Home from './components/Home';\n\nfunction App(props) {\n  return (\n    <div>\n      <Home authState={props.authState} />\n    </div>\n  );\n}\n\nexport default App;\n","import Layout from './Layout';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport baseUrl from '../const';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        adminSite: true,\n      }),\n    };\n    fetch(baseUrl + '/login', requestOptions)\n      .then((response) => response.json())\n      .then((results) => {\n        if (results.token !== undefined) {\n          window.localStorage.setItem('user', results.token);\n          props.authRefresh(true);\n          history.push('/');\n        } else {\n          setErrorMessage(results.message);\n        }\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"display: grid col-start-1 grid-rows-6 col-span-full row-start-2 place-content-center\">\n        <form onSubmit={handleSubmit} className=\"text-center row-start-3\">\n          <label htmlFor=\"username-field\">Username:</label>\n          <br />\n          <input\n            className=\"\n              input\n              w-48\n              border-2\n              border-green-200\n              rounded-md \n              focus:border-green-500\"\n            type=\"text\"\n            id=\"username-field\"\n            name=\"username\"\n            autoComplete=\"on\"\n            value={username ? username : ''}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-field\">Password:</label>\n          <br />\n          <input\n            className=\"\n              input\n              w-48\n              border-2\n             border-green-200\n              rounded-md \n              focus:border-green-500\"\n            type=\"password\"\n            id=\"password-field\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password ? password : ''}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <br />\n          <input\n            className=\"\n              bg-green-100\n              rounded-md\n              mt-2\n              w-48\n             hover:bg-green-200\n              cursor-pointer\"\n            type=\"submit\"\n            id=\"loginButton\"\n            value=\"Login\"\n          />\n          {errorMessage && <p className=\"row-start-4\">{errorMessage}</p>}\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = (props) => {\n  useEffect(() => {\n    props.authRefresh(true);\n    window.localStorage.removeItem('user');\n  }, []);\n\n  return <div>{!props.authState && <Redirect to={'/login'} />}</div>;\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport baseUrl from '../const';\nconst { DateTime } = require('luxon');\n\nconst Comments = (props) => {\n  const [comments, setComments] = useState([]);\n  const [reloadComments, setReloadComments] = useState(false);\n\n  const handleDelete = (e, commentId) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    fetch(\n      baseUrl + '/posts/' + props.postid + '/comments/' + commentId,\n      requestOptions\n    ).then(() => {\n      setComments([]);\n      setReloadComments(!reloadComments);\n    });\n  };\n\n  const fetchComments = async () => {\n    const response = await fetch(\n      baseUrl + '/posts/' + props.postid + '/comments',\n      {\n        mode: 'cors',\n      }\n    );\n    const data = await response.json();\n    for (const comment of data.comments) {\n      let element;\n      element = (\n        <div\n          className=\"box-border border-solid m-2 shadow-md p-1 display: grid gap-2 grid-rows-2 grid-cols-2 auto-rows-min-content justify-self-stretch border-2 border-green-200 rounded-md \"\n          id={comment._id}\n          key={comment._id}\n        >\n          <h4 className=\"justify-self-start\">{comment.author.username}</h4>\n          <p className=\"justify-self-end\">\n            {DateTime.fromISO(comment.timestamp).toLocaleString(\n              DateTime.DATETIME_MED\n            )}\n          </p>\n          <p className=\"row-start-2 col-span-full\">{comment.body}</p>\n          <div className=\"justify-self-end space-x-3 col-start-2\">\n            <Link\n              to={\n                '/posts/' + props.postid + '/comments/' + comment._id + '/edit'\n              }\n            >\n              <button\n                type=\"button\"\n                className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n              >\n                Edit\n              </button>\n            </Link>\n\n            <button\n              type=\"button\"\n              className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n              onClick={(e) => handleDelete(e, comment._id)}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      );\n      setComments((comments) => [...comments, element]);\n    }\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [reloadComments]);\n  return <div className=\"justify-self-stretch my-14\">{comments}</div>;\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, useHistory, Link } from 'react-router-dom';\nimport baseUrl from '../const';\n\n// import './PostDetails.css';\nimport Layout from './Layout';\nimport Comments from './Comments';\n\nconst PostDetails = (props) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const deletePost = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        post: id,\n      }),\n    };\n    fetch(baseUrl + '/posts/' + id, requestOptions).then(() => {\n      history.push('/');\n    });\n  };\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      const response = await fetch(baseUrl + '/posts/' + id, {\n        mode: 'cors',\n      });\n      const data = await response.json();\n      const item = data.post;\n      setPostDetails(item);\n    };\n    fetchPostDetails();\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"display: grid grid-rows-post auto-rows-auto row-start-2 col-span-full\">\n        <div className=\"display: grid grid-rows-postTitle\">\n          <div className=\"row-start-1 place-self-center col-span-full text-2xl font-semibold text-center display: grid\">\n            <h2>{postDetails ? postDetails.title : ''}</h2>\n            <div>\n              <div className=\"space-x-3\">\n                <Link to={useLocation().pathname + '/edit'}>\n                  <button\n                    type=\"button\"\n                    className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n                  >\n                    Edit\n                  </button>\n                </Link>\n                <button\n                  type=\"button\"\n                  className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n                  onClick={deletePost}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n          <img\n            src={\n              postDetails ? baseUrl + '/uploads/' + postDetails.coverPhoto : ''\n            }\n            alt=\"cover\"\n          />\n          <p className=\"mx-2 px-1\"> {postDetails ? postDetails.body : ''}</p>\n        </div>\n        <Comments postid={id} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostDetails;\n","import Layout from './Layout';\nimport { useParams, Redirect } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport baseUrl from '../const';\n\nconst PostForm = (props) => {\n  const [postTitle, setPostTitle] = useState(null);\n  const [postCoverPhoto, setPostCoverPhoto] = useState(null);\n  const [coverPhotoURL, setCoverPhotoURL] = useState(null);\n  const [postBody, setPostBody] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [newUrl, setNewUrl] = useState(null);\n  const { id } = useParams();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (id === undefined) {\n      const formData = new FormData();\n      formData.append('author', props.userId);\n      formData.append('title', postTitle);\n      formData.append('body', postBody);\n      formData.append('coverPhoto', postCoverPhoto);\n\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: formData,\n      };\n      fetch(baseUrl + '/posts/', requestOptions)\n        .then((response) => response.json())\n        .then((results) => {\n          return setNewUrl(results.url);\n        })\n        .catch((error) => {\n          console.log('The fetch error is: ' + error);\n        });\n    } else {\n      const formData = new FormData();\n      formData.append('title', postTitle);\n      formData.append('body', postBody);\n      formData.append('coverPhoto', postCoverPhoto);\n\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: formData,\n      };\n      fetch(baseUrl + '/posts/' + id, requestOptions).then(() =>\n        setRedirect(true)\n      );\n    }\n  };\n\n  const coverPhotoTernary = (e) => {\n    e.preventDefault();\n    if (coverPhotoURL === null) {\n      setPostCoverPhoto(e.target.files[0]);\n      setCoverPhotoURL(URL.createObjectURL(e.target.files[0]));\n    } else {\n      setCoverPhotoURL(null);\n    }\n  };\n\n  useEffect(() => {\n    if (id === undefined) {\n    } else {\n      const fetchPostDetails = async () => {\n        const response = await fetch(baseUrl + '/posts/' + id + '/edit', {\n          mode: 'cors',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('user'),\n          },\n        });\n        const data = await response.json();\n        const item = data.post;\n        console.log(item);\n        setPostTitle(item.title);\n        setPostCoverPhoto(item.coverPhoto);\n        setCoverPhotoURL(baseUrl + '/uploads/' + item.coverPhoto);\n        setPostBody(item.body);\n      };\n      fetchPostDetails();\n    }\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      {newUrl !== null && <Redirect to={newUrl} />}\n      {redirect === true && newUrl === null && (\n        <Redirect from=\"/posts/:id/edit\" to={'/posts/' + id} />\n      )}\n      <div className=\"justify-self-stretch col-span-full row-start-2 h-full\">\n        <form className=\"mt-14 mx-2 text-center\" onSubmit={handleSubmit}>\n          <label>Title: </label>\n          <br />\n          <input\n            className=\"box-border border-2 shadow-sm rounded-md gap-4 border-green-200 auto-rows-min w-full\"\n            type=\"text\"\n            name=\"title\"\n            value={postTitle ? postTitle : ''}\n            onChange={(e) => setPostTitle(e.target.value)}\n            required\n          />\n          <br />\n          <label>Cover photo</label>\n          <br />\n          {coverPhotoURL && (\n            <div>\n              <img src={coverPhotoURL} alt=\"Cover\" />\n              <button onClick={(e) => coverPhotoTernary(e)}>\n                Remove Image\n              </button>\n            </div>\n          )}\n          {coverPhotoURL === null && (\n            <input\n              className=\"\"\n              type=\"file\"\n              name=\"coverPhoto\"\n              id=\"coverPhoto\"\n              v\n              onChange={(e) => coverPhotoTernary(e)}\n              required\n            />\n          )}\n\n          <br />\n          <label>Body: </label>\n          <br />\n          <textarea\n            className=\"box-border border-2 shadow-sm rounded-md gap-4 border-green-200 auto-rows-min w-full h-screen\"\n            rows=\"20\"\n            name=\"body\"\n            value={postBody ? postBody : ''}\n            onChange={(e) => setPostBody(e.target.value)}\n            required\n          />\n          <br />\n          <input\n            type=\"submit\"\n            className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n            value=\"Submit\"\n          />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostForm;\n","import Layout from './Layout';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport baseUrl from '../const';\n\nconst CommentForm = (props) => {\n  const [commentBody, setCommentBody] = useState(null);\n  const { id, commentId } = useParams();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({ body: commentBody }),\n    };\n    fetch(\n      baseUrl + '/posts/' + id + '/comments/' + commentId,\n      requestOptions\n    ).then(() => {\n      history.push('/posts/' + id);\n    });\n  };\n\n  useEffect(() => {\n    const fetchCommentDetails = async () => {\n      const response = await fetch(\n        baseUrl + '/posts/' + id + '/comments/' + commentId + '/edit',\n        {\n          mode: 'cors',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('user'),\n          },\n        }\n      );\n      const data = await response.json();\n      const item = data.comment;\n      setCommentBody(item.body);\n    };\n    fetchCommentDetails();\n  }, [id, commentId]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"justify-self-stretch gap-4 col-span-full row-start-2\">\n        <form className=\"mt-14 mx-2 text-center h-auto\" onSubmit={handleSubmit}>\n          <label>Body: </label>\n          <br />\n          <textarea\n            className=\"box-border border-2 shadow-sm rounded-md gap-4 border-green-200 auto-rows-min w-full\"\n            rows=\"20\"\n            name=\"body\"\n            value={commentBody ? commentBody : ''}\n            onChange={(e) => setCommentBody(e.target.value)}\n            required\n          />\n          <input\n            type=\"submit\"\n            id=\"commentSubmit\"\n            className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n            value=\"Submit\"\n          />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CommentForm;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport PostDetails from './components/PostDetails';\nimport PostForm from './components/PostForm';\nimport CommentForm from './components/CommentForm';\nimport baseUrl from './const';\n\nconst Routes = () => {\n  const [auth, setAuth] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  const authChecker = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    if (localStorage.getItem('user')) {\n      fetch(baseUrl + '/auth', requestOptions)\n        .then((response) => {\n          return response.json();\n        })\n        .then((results) => {\n          setAuth(results.response);\n          setUserId(results.userId);\n          setRefresh(false);\n        });\n    } else {\n      setAuth(false);\n      setUserId(null);\n      setRefresh(false);\n    }\n  };\n\n  useEffect(() => {\n    authChecker();\n  }, [refresh]);\n\n  return (\n    <HashRouter forceRefresh>\n      {!auth && !localStorage.getItem('user') && (\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Redirect to={'/login'} />\n          </Switch>\n        </div>\n      )}\n      {auth && localStorage.getItem('user') && (\n        <Switch>\n          <Route exact path=\"/\" render={() => <App authState={auth} />} />\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login authRefresh={(state) => setRefresh(state)} />}\n          />\n          <Route\n            exact\n            path=\"/logout\"\n            render={() => (\n              <Logout\n                authState={auth}\n                authRefresh={(state) => setRefresh(state)}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/posts/new\"\n            render={() => <PostForm authState={auth} userId={userId} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id\"\n            render={() => <PostDetails authState={auth} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id/edit\"\n            render={() => <PostForm authState={auth} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id/comments/:commentId/edit\"\n            render={() => <CommentForm authState={auth} />}\n          />\n        </Switch>\n      )}\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}