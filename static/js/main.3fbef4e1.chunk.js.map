{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","components/Home.js","App.js","components/Login.js","components/Logout.js","components/Comments.js","components/PostDetails.js","components/PostForm.js","components/CommentForm.js","Routes.js","index.js"],"names":["Header","props","className","to","authState","Footer","Layout","children","Home","useState","posts","setPosts","refresh","setRefresh","handleSubmit","useHistory","e","post","preventDefault","requestOptions","method","mode","headers","Authorization","localStorage","getItem","body","JSON","stringify","title","published","fetch","id","then","results","useEffect","a","response","json","data","item","listPosts","map","toString","onSubmit","type","value","fetchPosts","App","Login","username","setUsername","password","setPassword","history","errorMessage","setErrorMessage","adminSite","undefined","token","window","setItem","authRefresh","push","message","htmlFor","name","autoComplete","onChange","target","required","Logout","removeItem","DateTime","require","Comments","comments","setComments","reloadComments","setReloadComments","handleDelete","commentId","postid","fetchComments","element","comment","_id","author","fromISO","timestamp","toLocaleString","DATETIME_MED","onClick","PostDetails","postDetails","setPostDetails","useParams","fetchPostDetails","useLocation","pathname","PostForm","postTitle","setPostTitle","postBody","setPostBody","redirect","setRedirect","newUrl","setNewUrl","from","userId","url","catch","error","console","log","rows","CommentForm","commentBody","setCommentBody","fetchCommentDetails","Routes","auth","setAuth","setUserId","authChecker","forceRefresh","exact","path","render","state","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fbef4e1.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <div className=\"display: grid grid-cols-3 col-span-3 row-start-1 bg-green-100 py-2\">\n      <ul className=\"display: grid col-start-1 col-span-full grid-flow-col place-items-center text-center\">\n        <li className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-5/6 active:bg-green-400 active:border-green-400 shadow-sm\">\n          <NavLink to=\"/\" className=\"display: block\">\n            Home\n          </NavLink>\n        </li>\n        {!props.authState && (\n          <li className=\"sm:col-start-3 lg:col-start-4 bordber-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-5/6 active:bg-green-400 active:border-green-400 shadow-sm\">\n            <NavLink to=\"/login\" className=\"display: block\">\n              Login\n            </NavLink>\n          </li>\n        )}\n        {props.authState && (\n          <li className=\"sm:col-start-4 lg:col-start-5 border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-5/6 active:bg-green-400 active:border-green-400 shadow-sm\">\n            <NavLink to=\"/logout\" className=\"display: block\">\n              Log out\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  return (\n    <ul className=\"display: grid grid-cols-3 text-center py-2 row-start-3 col-span-full\">\n      <li>Privacy</li>\n      <li>About</li>\n      <li>Contact us</li>\n    </ul>\n  );\n};\n\nexport default Footer;\n","import Header from './Header';\nimport Footer from './Footer';\n\nconst Layout = (props) => {\n  return (\n    <div className=\"display: grid grid-cols-3 grid-rows-layout min-h-screen grid-flow-col p-0 m-0 list-none\">\n      <Header authState={props.authState} />\n      {props.children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport Layout from './Layout';\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e, post) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        title: post.title,\n        body: post.body,\n        published: !post.published,\n      }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + post.id,\n      requestOptions\n    ).then((results) => {\n      setRefresh(!refresh);\n    });\n  };\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts',\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.posts;\n      const listPosts = item.map((post) => {\n        return (\n          <li\n            key={post.title}\n            className=\"display: grid box-border border-2 shadow-sm rounded-md gap-4 border-green-200 mx-2 auto-rows-min\"\n          >\n            <Link to={'/posts/' + post.id}>\n              <p className=\"m-14 text-center text-xl font-semibold\">\n                {post.title}\n              </p>\n            </Link>\n            <div className=\"display: grid mb-8\">\n              <p>Published: {post.published.toString()}</p>\n              <form onSubmit={(e) => handleSubmit(e, post)}>\n                <input\n                  className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n                  type=\"submit\"\n                  id=\"togglePublish\"\n                  value=\"Toggle\"\n                />\n              </form>\n            </div>\n          </li>\n        );\n      });\n      setPosts(listPosts);\n    };\n    fetchPosts();\n  }, [refresh]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"display: grid grid-rows-home auto-rows-min row-start-2 col-span-full\">\n        <div className=\"row-start-1 place-self-center min-h-px col-span-full text-2xl font-semibold text-center\">\n          <h2>Welcome to the blog admin site!</h2>\n          <Link to=\"/posts/new\">\n            <button\n              type=\"button\"\n              className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n            >\n              New Post\n            </button>\n          </Link>\n        </div>\n        <ul className=\"display: grid grid-flow-row md:grid-cols-2 row-start-2 lg:grid-cols-3 col-span-full gap-y-4 h-full text-center auto-rows-min\">\n          {posts ? posts : ''}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport Home from './components/Home';\n\nfunction App(props) {\n  return (\n    <div>\n      <Home authState={props.authState} />\n    </div>\n  );\n}\n\nexport default App;\n","import Layout from './Layout';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        adminSite: true,\n      }),\n    };\n    fetch('https://serene-waters-04286.herokuapp.com/login', requestOptions)\n      .then((response) => response.json())\n      .then((results) => {\n        if (results.token !== undefined) {\n          window.localStorage.setItem('user', results.token);\n          props.authRefresh(true);\n          history.push('/');\n        } else {\n          setErrorMessage(results.message);\n        }\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"display: grid col-start-1 grid-rows-6 col-span-full row-start-2 place-content-center\">\n        <form onSubmit={handleSubmit} className=\"text-center row-start-3\">\n          <label htmlFor=\"username-field\">Username:</label>\n          <br />\n          <input\n            className=\"\n              input\n              w-48\n              border-2\n              border-green-200\n              rounded-md \n              focus:border-green-500\"\n            type=\"text\"\n            id=\"username-field\"\n            name=\"username\"\n            autoComplete=\"on\"\n            value={username ? username : ''}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-field\">Password:</label>\n          <br />\n          <input\n            className=\"\n              input\n              w-48\n              border-2\n             border-green-200\n              rounded-md \n              focus:border-green-500\"\n            type=\"password\"\n            id=\"password-field\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password ? password : ''}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <br />\n          <input\n            className=\"\n              bg-green-100\n              rounded-md\n              mt-2\n              w-48\n             hover:bg-green-200\n              cursor-pointer\"\n            type=\"submit\"\n            id=\"loginButton\"\n            value=\"Login\"\n          />\n          {errorMessage && <p className=\"row-start-4\">{errorMessage}</p>}\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = (props) => {\n  useEffect(() => {\n    props.authRefresh(true);\n    window.localStorage.removeItem('user');\n  }, []);\n\n  return <div>{!props.authState && <Redirect to={'/login'} />}</div>;\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nconst { DateTime } = require('luxon');\n\nconst Comments = (props) => {\n  const [comments, setComments] = useState([]);\n  const [reloadComments, setReloadComments] = useState(false);\n\n  const handleDelete = (e, commentId) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        props.postid +\n        '/comments/' +\n        commentId,\n      requestOptions\n    ).then(() => {\n      setComments([]);\n      setReloadComments(!reloadComments);\n    });\n  };\n\n  const fetchComments = async () => {\n    const response = await fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        props.postid +\n        '/comments',\n      {\n        mode: 'cors',\n      }\n    );\n    const data = await response.json();\n    for (const comment of data.comments) {\n      let element;\n      element = (\n        <div\n          className=\"box-border border-solid m-2 shadow-md p-1 display: grid gap-2 grid-rows-2 grid-cols-2 auto-rows-min-content justify-self-stretch border-2 border-green-200 rounded-md \"\n          id={comment._id}\n          key={comment._id}\n        >\n          <h4 className=\"justify-self-start\">{comment.author.username}</h4>\n          <p className=\"justify-self-end\">\n            {DateTime.fromISO(comment.timestamp).toLocaleString(\n              DateTime.DATETIME_MED\n            )}\n          </p>\n          <p className=\"row-start-2 col-span-full\">{comment.body}</p>\n          <div className=\"justify-self-end space-x-3 col-start-2\">\n            <Link\n              to={\n                '/posts/' + props.postid + '/comments/' + comment._id + '/edit'\n              }\n            >\n              <button\n                type=\"button\"\n                className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n              >\n                Edit\n              </button>\n            </Link>\n\n            <button\n              type=\"button\"\n              className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n              onClick={(e) => handleDelete(e, comment._id)}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      );\n      setComments((comments) => [...comments, element]);\n    }\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [reloadComments]);\n  return <div className=\"justify-self-stretch my-14\">{comments}</div>;\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, useHistory, Link } from 'react-router-dom';\n\n// import './PostDetails.css';\nimport Layout from './Layout';\nimport Comments from './Comments';\n\nconst PostDetails = (props) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const deletePost = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        post: id,\n      }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + id,\n      requestOptions\n    ).then(() => {\n      history.push('/');\n    });\n  };\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.post;\n      setPostDetails(item);\n    };\n    fetchPostDetails();\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"display: grid grid-rows-post auto-rows-auto row-start-2 col-span-full\">\n        <div className=\"display: grid grid-rows-postTitle\">\n          <div className=\"row-start-1 place-self-center col-span-full text-2xl font-semibold text-center display: grid\">\n            <h2>{postDetails ? postDetails.title : ''}</h2>\n            <div>\n              <div className=\"space-x-3\">\n                <Link to={useLocation().pathname + '/edit'}>\n                  <button\n                    type=\"button\"\n                    className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n                  >\n                    Edit\n                  </button>\n                </Link>\n                <button\n                  type=\"button\"\n                  className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-auto active:bg-green-400 active:border-green-400 shadow-sm\"\n                  onClick={deletePost}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n          <p className=\"mx-2 px-1\"> {postDetails ? postDetails.body : ''}</p>\n        </div>\n        <Comments postid={id} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostDetails;\n","import Layout from './Layout';\nimport { useParams, Redirect } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst PostForm = (props) => {\n  const [postTitle, setPostTitle] = useState(null);\n  const [postBody, setPostBody] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [newUrl, setNewUrl] = useState(null);\n  const { id } = useParams();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (id === undefined) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: JSON.stringify({\n          author: props.userId,\n          title: postTitle,\n          body: postBody,\n        }),\n      };\n      fetch('https://serene-waters-04286.herokuapp.com/posts/', requestOptions)\n        .then((response) => response.json())\n        .then((results) => {\n          return setNewUrl(results.url);\n        })\n        .catch((error) => {\n          console.log('The fetch error is: ' + error);\n        });\n    } else {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('user'),\n        },\n        body: JSON.stringify({ title: postTitle, body: postBody }),\n      };\n      fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        requestOptions\n      ).then(() => setRedirect(true));\n    }\n  };\n\n  useEffect(() => {\n    if (id === undefined) {\n    } else {\n      const fetchPostDetails = async () => {\n        const response = await fetch(\n          'https://serene-waters-04286.herokuapp.com/posts/' + id + '/edit',\n          {\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + localStorage.getItem('user'),\n            },\n          }\n        );\n        const data = await response.json();\n        const item = data.post;\n        setPostTitle(item.title);\n        setPostBody(item.body);\n      };\n      fetchPostDetails();\n    }\n  }, [id]);\n\n  return (\n    <Layout authState={props.authState}>\n      {newUrl !== null && <Redirect to={newUrl} />}\n      {redirect === true && newUrl === null && (\n        <Redirect from=\"/posts/:id/edit\" to={'/posts/' + id} />\n      )}\n      <div className=\"justify-self-stretch col-span-full row-start-2 h-full\">\n        <form className=\"mt-14 mx-2 text-center\" onSubmit={handleSubmit}>\n          <label>Title: </label>\n          <br />\n          <input\n            className=\"box-border border-2 shadow-sm rounded-md gap-4 border-green-200 auto-rows-min w-full\"\n            type=\"text\"\n            name=\"title\"\n            value={postTitle ? postTitle : ''}\n            onChange={(e) => setPostTitle(e.target.value)}\n            required\n          />\n          <br />\n          <label>Body: </label>\n          <br />\n          <textarea\n            className=\"box-border border-2 shadow-sm rounded-md gap-4 border-green-200 auto-rows-min w-full h-screen\"\n            rows=\"20\"\n            name=\"body\"\n            value={postBody ? postBody : ''}\n            onChange={(e) => setPostBody(e.target.value)}\n            required\n          />\n          <br />\n          <input\n            type=\"submit\"\n            className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n            value=\"Submit\"\n          />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostForm;\n","import Layout from './Layout';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst CommentForm = (props) => {\n  const [commentBody, setCommentBody] = useState(null);\n  const { id, commentId } = useParams();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({ body: commentBody }),\n    };\n    fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' +\n        id +\n        '/comments/' +\n        commentId,\n      requestOptions\n    ).then(() => {\n      history.push('/posts/' + id);\n    });\n  };\n\n  useEffect(() => {\n    const fetchCommentDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' +\n          id +\n          '/comments/' +\n          commentId +\n          '/edit',\n        {\n          mode: 'cors',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('user'),\n          },\n        }\n      );\n      const data = await response.json();\n      const item = data.comment;\n      setCommentBody(item.body);\n    };\n    fetchCommentDetails();\n  }, [id, commentId]);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"justify-self-stretch gap-4 col-span-full row-start-2\">\n        <form className=\"mt-14 mx-2 text-center h-auto\" onSubmit={handleSubmit}>\n          <label>Body: </label>\n          <br />\n          <textarea\n            className=\"box-border border-2 shadow-sm rounded-md gap-4 border-green-200 auto-rows-min w-full\"\n            rows=\"20\"\n            name=\"body\"\n            value={commentBody ? commentBody : ''}\n            onChange={(e) => setCommentBody(e.target.value)}\n            required\n          />\n          <input\n            type=\"submit\"\n            id=\"commentSubmit\"\n            className=\"border-solid border-4 border-green-200 rounded-md bg-green-200 hover:bg-green-300 hover:border-green-300 w-2/6 active:bg-green-400 active:border-green-400 shadow-sm\"\n            value=\"Submit\"\n          />\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CommentForm;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport PostDetails from './components/PostDetails';\nimport PostForm from './components/PostForm';\nimport CommentForm from './components/CommentForm';\n\nconst Routes = () => {\n  const [auth, setAuth] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  const authChecker = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    if (localStorage.getItem('user')) {\n      fetch('https://serene-waters-04286.herokuapp.com/auth', requestOptions)\n        .then((response) => {\n          return response.json();\n        })\n        .then((results) => {\n          setAuth(results.response);\n          setUserId(results.userId);\n          setRefresh(false);\n        });\n    } else {\n      setAuth(false);\n      setUserId(null);\n      setRefresh(false);\n    }\n  };\n\n  useEffect(() => {\n    authChecker();\n  }, [refresh]);\n\n  return (\n    <HashRouter forceRefresh>\n      {!auth && !localStorage.getItem('user') && (\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Login authRefresh={(state) => setRefresh(state)} />\n              )}\n            />\n            <Redirect to={'/login'} />\n          </Switch>\n        </div>\n      )}\n      {auth && localStorage.getItem('user') && (\n        <Switch>\n          <Route exact path=\"/\" render={() => <App authState={auth} />} />\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login authRefresh={(state) => setRefresh(state)} />}\n          />\n          <Route\n            exact\n            path=\"/logout\"\n            render={() => (\n              <Logout\n                authState={auth}\n                authRefresh={(state) => setRefresh(state)}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/posts/new\"\n            render={() => <PostForm authState={auth} userId={userId} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id\"\n            render={() => <PostDetails authState={auth} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id/edit\"\n            render={() => <PostForm authState={auth} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id/comments/:commentId/edit\"\n            render={() => <CommentForm authState={auth} />}\n          />\n        </Switch>\n      )}\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}